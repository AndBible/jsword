<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">

  <property name="basedir" value="${checkstyle.basedir}"/>

  <!-- Checks for Javadoc Comments -->
  <module name="JavadocPackage">
    <property name="allowLegacy" value="true"/>
  </module>
  <module name="NewlineAtEndOfFile"/>
  <module name="Translation"/>
  <module name="FileLength">
    <property name="max" value="2000"/>
  </module>
  <module name="FileTabCharacter"/>
  <!-- Header checks would be good to do, in order to verify that license is present.
  <module name="Header"/>
  <module name="RegexpHeader"/>
  -->

  <module name="TreeWalker">

    <property name="cacheFile" value="${checkstyle.cache.file}"/>

    <!-- Checks for Annotations -->
    <module name="AnnotationUseStyle"/>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride"/>
    <module name="PackageAnnotation"/> <!-- new -->
    <module name="SuppressWarnings"/>
    
    <!-- Checks for Javadoc Comments -->
    <module name="JavadocType">
      <property name="authorFormat" value="\S"/>
    </module>
    <!-- This would be a big change
    <module name="JavadocType">
      <property name="scope" value="public"/>
    </module>
    -->
    <!--  Should do this
    <module name="JavadocMethod">
      <property name="scope" value="public"/>
    </module>
     -->
    <!--  Should do this
	<module name="JavadocVariable">
	   <property name="scope" value="public"/>
	</module>
	-->
    <!--  Should do this
    <module name="JavadocStyle">
      <property name="scope" value="public"/>
    </module>
    -->
    <!-- The following would need to be configured to be useful.
    <module name="WriteTag"/>
    -->

    <!-- Checks for Naming Conventions -->
    <module name="AbstractClassName">
      <property name="format" value="^Abstract.*$"/>
    </module>
    <!-- Allow "log" and "instance" otherwise only upper case valid variables with _ -->
    <module name="ConstantName">
      <property name="format" value="^(log|instance|([A-Z][A-Z0-9]*(_[A-Z0-9]+)*))$"/>
    </module>
    <module name="LocalFinalVariableName">
      <property name="format" value="[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MemberName">
      <property name="format" value="[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodName"/>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z]([a-z0-9]{1,13}|[a-z0-9]+tion))*$"/>
    </module>
    <module name="ParameterName">
      <property name="format" value="[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="StaticVariableName">
      <property name="format" value="[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="TypeName"/>

    <!-- Checks for imports -->
    <module name="AvoidStarImport"/>
    <module name="AvoidStaticImport"/>
    <module name="IllegalImport"/>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>
    <!-- Would need to be configured to be useful
    <module name="ImportOrder"/>
    <module name="ImportControl"/>
    -->

    <!-- Checks for Size Violations -->
    <!--
    <module name="ExecutableStatementCount">
      <property name="max" value="20"/>
      <property name="tokens" value="CTOR_DEF,METHOD_DEF,INSTANCE_INIT,STATIC_INIT"/>
    </module>
    -->
    <!--
    <module name="LineLength">
      <property name="max" value="256"/>
    </module>
    <module name="MethodLength">
      <property name="tokens" value="METHOD_DEF"/>
      <property name="max" value="300"/>
      <property name="countEmpty" value="false"/>
    </module>
         
    <module name="MethodLength">
      <property name="tokens" value="CTOR_DEF"/>
      <property name="max" value="500"/>
      <property name="countEmpty" value="false"/>
    </module>
    -->
    <!--
    <module name="AnonInnerLength">
      <property name="max" value="60"/>
    </module>
    -->
    <module name="ParameterNumber">
      <property name="max" value="7"/>
      <property name="tokens" value="CTOR_DEF,METHOD_DEF"/>
    </module>
    <module name="OuterTypeNumber"/>
    <module name="MethodCount">
      <property name="maxTotal" value="100"/>
      <property name="maxPrivate" value="20"/>
      <property name="maxPackage" value="10"/>
      <property name="maxProtected" value="20"/>
      <property name="maxPublic" value="50"/>
    </module>

    <!-- Checks for Whitespace -->
    <module name="GenericWhitespace"/>
    <module name="EmptyForInitializerPad">
      <property name="option" value="space"/>
    </module>
    <module name="EmptyForIteratorPad">
      <property name="option" value="space"/>
    </module>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/><!-- ARRAY_INIT, -->
      <property name="allowLineBreaks" value="false"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="tokens" value="SEMI, POST_DEC, POST_INC"/>
      <property name="allowLineBreaks" value="false"/>
    </module>
    <module name="OperatorWrap"/>
    <module name="ParenPad">
      <property name="option" value="nospace"/>
    </module>
    <module name="TypecastParenPad">
      <property name="option" value="nospace"/>
    </module>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround"/>
    <!-- End of whitespace rules -->

    <!-- Modifier Checks -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Checks for blocks -->
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="LeftCurly">
      <property name="option" value="nlow"/>
    </module>
    <module name="NeedBraces"/>
    <module name="RightCurly">
      <property name="option" value="same"/>
    </module>
    <module name="AvoidNestedBlocks"/>

    <!-- Checks for Coding problems -->
    <!-- JSword does not require trailing comma on arrays
    <module name="ArrayTrailingComma"/>
    -->
    <!-- We are not ready for this
    <module name="AvoidInlineConditionals"/>
    -->
    <module name="CovariantEquals"/> 
    <!-- module name="DoubleCheckedLocking"/ not in 5.6 -->
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <!-- We are not ready for this
    <module name="FinalLocalVariable">
      <property name="tokens" value="VARIABLE_DEF"/>
      <property name="tokens" value="PARAMETER_DEF"/>
    </module>
    -->
    <module name="HiddenField">
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean, java.lang.String"/>
    </module>
    <!-- Are there any features of Java that are not allowed? Not for JSword.
    <module name="IllegalToken"/>
    -->
    <!-- Example usage
    <module name="IllegalTokenText">
      <property name="tokens" value="STRING_LITERAL"/>
      <property name="format" value="a href"/>
    </module>
    -->
    <module name="IllegalTokenText">
      <property name="tokens" value="NUM_INT,NUM_LONG"/>
      <property name="format" value="^0[^lx]"/>
      <property name="ignoreCase" value="true"/>
    </module>
    <module name="InnerAssignment"/>
    <!-- JSword uses tables of numbers
    <module name="MagicNumber"/>
    -->
    <module name="MissingSwitchDefault"/>
    <module name="ModifiedControlVariable"/>
    <!-- Buggy
    <module name="RedundantThrows"/>
    -->
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="NestedForDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NestedIfDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NestedTryDepth">
      <property name="max" value="3"/>
    </module>
    <!-- Are there any features of Java that are not allowed? Not for JSword.
    <module name="NoClone"/>
    <module name="NoFinalizer"/>
    -->
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <!-- We are not ready for this
try    -->
    <module name="IllegalCatch"/>
    <module name="IllegalThrows"/>
    <module name="PackageDeclaration"/>
    <!--  <module name="JUnitTestCase"/> Removed in 6.2 -->
    <!-- We are not ready for this
    <module name="ReturnCount">
      <property name="max" value="3"/>
    </module>
    -->
    <!-- We are not ready for this
    <module name="IllegalType"/>
    -->
    <!-- JSword has its own conventions for declaration order 
    <module name="DeclarationOrder"/>
    -->
    <module name="ParameterAssignment"/>
    <module name="ExplicitInitialization"/>
    <module name="DefaultComesLast"/>
    <!-- We are not ready for this
    <module name="MissingCtor"/>
    -->
    <module name="FallThrough"/>
    <module name="MultipleStringLiterals">
      <property name="allowedDuplicates" value="10"/>
    </module>
    <module name="MultipleVariableDeclarations"/>
    <!-- JSword does not require "this"
    <module name="RequireThis"/>  
    -->
    <module name="UnnecessaryParentheses"/>
    <module name="OneStatementPerLine"/>

    <!-- Class Design Checks -->  
    <module name="VisibilityModifier">
      <property name="protectedAllowed" value="true"/>
    </module>
    <module name="FinalClass"/>
    <module name="InterfaceIsType"/>
    <module name="HideUtilityClassConstructor"/>
    <!-- This would be a big change
    <module name="DesignForExtension"/>
    -->
    <module name="MutableException"/>
    <!-- We are not ready for this
    <module name="ThrowsCount">
      <property name="max" value="2"/>
    </module>
    -->
    <!-- This would be a big change
    <module name="InnerTypeLast"/>
tried    -->
    <!-- The ant task cpd does this
    <module name="StrictDuplicateCode"/>
    -->

    <!-- Metrics Checks
    <module name="BooleanExpressionComplexity">
      <property name="max" value="3"/>
    </module>
    <module name="ClassDataAbstractionCoupling">
      <property name="max" value="7"/>
    </module>
    <module name="ClassFanOutComplexity">
      <property name="max" value="20"/>
    </module>
    <module name="CyclomaticComplexity">
      <property name="max" value="10"/>
    </module>
    <module name="NPathComplexity">
      <property name="max" value="200"/>
    </module>
    <module name="JavaNCSS">
      <property name="methodMaximum" value="40"/>
    </module>
    -->

    <!-- Miscellaneous Checks -->
    <module name="RegexpSinglelineJava">
      <property name="format" value="((public)|(protected))\s+void\s+finalize\(\s*\)"/>
    </module>
    <!-- Check to find trailing whitespace at the end of a line -->
    <module name="RegexpSinglelineJava">
      <property name="format" value="\s$"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TodoComment"/>
    <module name="UncommentedMain">
      <property name="excludedClasses" value="\.(Desktop|APIExamples|XalanProcess|XMLProcess|BibleToOsis|DictToOsis|BibleScope|BookExporter|BookInstaller|BookLookup|StrongsAnalysis)$"/>
    </module>
    <module name="UpperEll"/>
    <module name="ArrayTypeStyle"/>
    <!-- This would be a big change
    <module name="FinalParameters"/>
tried    -->
    <module name="DescendantToken"/>
    <!-- This would be a big change
    <module name="Indentation"/>
tried    -->
    <!-- This would be a big change.
    <module name="TrailingComment"/>
tried    -->

    <!-- Perhaps we should check for the GPL license @author, @id, ...
    <module name="RequiredRegexp"/>
    -->
    <module name="OuterTypeFilename"/>

    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>
  </module>

</module>

